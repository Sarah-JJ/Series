<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
          integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

    <title>Content</title>
</head>
<body class="bg-light">

<div class="container" id="root">
    <!-- Modal -->
    <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add new series</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Series Name</label>
                        <input v-model="newShow.name" type="text" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <input v-model="newShow.description" type="text" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Genre</label>
                        <input v-model="newShow.genre" type="text" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Image</label>
                        <input v-model="newShow.image" type="text" class="form-control">
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button @click="addShow" type="button" class="btn btn-primary">Add</button>
                </div>
            </div>
        </div>
    </div>

    <!--EDIT MODAL-->
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Edit Series</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Name</label>
                        <input v-model="editingShow.name" type="text" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <input v-model="editingShow.description" type="text" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Genre</label>
                        <input v-model="editingShow.genre" type="text" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Image</label>
                        <input v-model="editingShow.image" type="text" class="form-control">
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button @click="editShow()" type="button" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>


    <div class="row justify-content-center mt-3">
        <div class="col-md-7">
            <div class="card">
                <div class="card-body p-0">
                    <table class="table">
                        <thead class="thead-dark">
                        <tr>
                            <th>No.</th>
                            <th>Name</th>
                            <th>Genres</th>
                            <th>Actions</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr v-for="(show,index) in shows">
                            <td>{{index + 1}}</td>
                            <td>{{show.name}}</td>
                            <td>{{show.genre}}</td>
                            <td>
                                <button @click="removeShow(show._id)" class="btn btn-danger btn-sm">Remove
                                </button>
                                <button @click="openEditModal(show)" class="btn btn-info btn-sm">Edit
                                </button>
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row justify-content-center mt-2">
        <div class="col-md-2">
            <button class="btn btn-dark" @click="openAddModal()">Add New Series</button>

        </div>
    </div>
</div>



<!-- Optional JavaScript -->
<!-- jQuery first, then Popper.js, then Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2.5.13/dist/vue.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>

    var app = new Vue({
        el: '#root',
        data: {
            shows: [],
            newShow: {
                name: "",
                description: "",
                genre: "",
                image: "",
            },
            editingShow: {
                name: "",
                description: "",
                genre: "",
                image: "",
            }

        },
        methods: {
            openAddModal: function () {
                $('#addModal').modal('show')

            },
            openEditModal: function (show) {
                this.editingShow = show;
                $('#editModal').modal('show')

            },
            addShow: function () {
                axios.post('/shows', {show: this.newShow}).then(function (response) {
                    if (response.data.isAdded) {
                        $('#addModal').modal('hide');
                        app.getShows();
                    }
                }).catch(function (error) {
                    console.log("Error")

                });
            },
            editShow: function () {
                axios.put('/shows', {show: this.editingShow}).then(function (response) {
                    if (response.data.isEdited) {
                        app.getShows();
                        $('#editModal').modal('hide');
                    }
                })
            },
            removeShow: function (id) {
                axios.delete('/shows', {
                    params: {
                        id: id
                    }
                }).then(function (response) {
                    if (response.data.isDeleted) {
                        app.getShows()
                    }
                })
            },
            getShows: function() {
                axios.get('/shows').then(function (response) {
                    app.shows = response.data;
                });
            }

        },
        mounted: function () {
            this.getShows()
        }
    });
</script>
</body>
</html>